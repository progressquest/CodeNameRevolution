//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;

namespace RevolutionDAL
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(Character))]
    [KnownType(typeof(PersonalityType))]
    public partial class CharacterPersonality
    {
        #region Primitive Properties
        [DataMember]
        public virtual int CharacterID
        {
            get { return _characterID; }
            set
            {
                if (_characterID != value)
                {
                    if (Character != null && Character.ID != value)
                    {
                        Character = null;
                    }
                    _characterID = value;
                }
            }
        }
        private int _characterID;
        [DataMember]
        public virtual int PersonalityTypeID
        {
            get { return _personalityTypeID; }
            set
            {
                if (_personalityTypeID != value)
                {
                    if (PersonalityType != null && PersonalityType.ID != value)
                    {
                        PersonalityType = null;
                    }
                    _personalityTypeID = value;
                }
            }
        }
        private int _personalityTypeID;
        [DataMember]
        public virtual int Rating
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
        
    
        [DataMember]
        public virtual Character Character
        {
            get { return _character; }
            set
            {
                if (!ReferenceEquals(_character, value))
                {
                    var previousValue = _character;
                    _character = value;
                    FixupCharacter(previousValue);
                }
            }
        }
        private Character _character;
        
    
        [DataMember]
        public virtual PersonalityType PersonalityType
        {
            get { return _personalityType; }
            set
            {
                if (!ReferenceEquals(_personalityType, value))
                {
                    var previousValue = _personalityType;
                    _personalityType = value;
                    FixupPersonalityType(previousValue);
                }
            }
        }
        private PersonalityType _personalityType;

        #endregion
        #region Association Fixup
    
        private void FixupCharacter(Character previousValue)
        {
            if (previousValue != null && previousValue.CharacterPersonalities.Contains(this))
            {
                previousValue.CharacterPersonalities.Remove(this);
            }
    
            if (Character != null)
            {
                if (!Character.CharacterPersonalities.Contains(this))
                {
                    Character.CharacterPersonalities.Add(this);
                }
                if (CharacterID != Character.ID)
                {
                    CharacterID = Character.ID;
                }
            }
        }
    
        private void FixupPersonalityType(PersonalityType previousValue)
        {
            if (PersonalityType != null)
            {
                if (PersonalityTypeID != PersonalityType.ID)
                {
                    PersonalityTypeID = PersonalityType.ID;
                }
            }
        }

        #endregion
    }
}
